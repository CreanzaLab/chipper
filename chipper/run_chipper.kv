#:import MeshLinePlot kivy.garden.graph.MeshLinePlot
#:import np numpy
#:import FileBrowser kivy.garden.filebrowser
#:import webbrowser webbrowser

<Manager>:
    LandingPage:
        id: welcome
        name: 'landing_page'
    FileExplorer:
        radio_chipper: welcome.radio_chipper
        radio_note: welcome.radio_note
        radio_syllsim: welcome.radio_syllsim
        radio_analyze: welcome.radio_analyze
    ControlPanel:
#        id: controls
        name: 'control_panel'
        user_signal_thresh: welcome.user_signal_thresh
        user_min_silence: welcome.user_min_silence
        user_min_syllable: welcome.user_min_syllable
        find_gzips: welcome.find_gzips
    Analysis:
        user_note_thresh: welcome.user_note_thresh
        user_syll_sim_thresh: welcome.user_syll_sim_thresh
        name: 'analysis'

<CustomLabel@Label>
    color: 1, 1, 1, 1

<RadioLabel@ButtonBehavior+Label>

<FinishMarksPopup>
    size_hint: .25, .25
    auto_dismiss: False
    title: 'Before moving to a new task you must do one of the following:'
    title_size: 16
    BoxLayout:
        orientation: 'vertical'
        Button:
            text: 'Accept'
            on_press: root.controls.enter_mark()
            on_release: root.dismiss()
        Button:
            text: 'Cancel'
            on_press: root.controls.cancel_mark()
            on_release: root.dismiss()
        Label:
            text: 'ProTip: You can press ENTER to accept or X to cancel to avoid this popup.'
            text_size: self.size
            halign: 'left'
            valign: 'middle'

<CheckLengthPopup>
    size_hint: .25, .25
    auto_dismiss: False
    title: 'WARNING: There is an unequal number of onsets and offsets. You must have an equal number to proceed to the next sample.'
    title_size: 16
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: 'Number of onsets: ' + root.len_onsets + "\nNumber of offsets: " + root.len_offsets
            text_size: self.size
            halign: 'center'
            valign: 'middle'
        Button:
            text: 'Okay'
            on_release: root.dismiss()

<CheckBeginningEndPopup>
    size_hint: .25, .25
    auto_dismiss: False
    title: 'WARNING: You must start with an onset and end with an offset.'
    title_size: 16
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: 'Starts with onset: ' + str(root.start_onset) + "\nEnds with offset: " + str(root.end_offset)
            text_size: self.size
            halign: 'center'
            valign: 'middle'
        Button:
            text: 'Okay'
            on_release: root.dismiss()

#<ZoomPopup>
##    top_image: test
#    size_hint: .5, .5
#    auto_dismiss: True
#
##    ImageSonogram
##        id: test
##        rows:1
##        cols:1
##        size_hint_x: 1

<CheckOrderPopup>
    size_hint: .5, .25
    auto_dismiss: False
    title: 'WARNING: The order of syllable onsets and offsets is nonsensical. You must alternate between onsets and offsets.'
    title_size: 16
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: 'Your current order is as follows with 0 as onsets and 1 as offsets:\n' + str(root.order)
            text_size: self.size
            halign: 'center'
            valign: 'middle'
        Button:
            text: 'Okay'
            on_release: root.dismiss()

<DonePopup>:
    size_hint: .3, .3
    auto_dismiss: False
#    title: 'You have completed the files in this directory.\nAll parameters, onsets, and offsets have been saved.'
    title: 'All parameters, onsets, and offsets have been saved!'
    text_size: self.size
    Button:
        text: 'Close'
        on_release: root.quit_app()

<StartSegmentationPopup>
    size_hint: .5, .3
    auto_dismiss: False
    title: 'Do you want to segment ' + root.len_files + ' WAV files?'
#    text_size: self.size
    BoxLayout:
        orientation: 'horizontal'

        Button:
            text: 'Back'
            on_release: root.dismiss()
        Button:
            text: 'Begin\nSegmentation'
            halign: 'center'
            on_release: app.root.current = 'control_panel'; root.dismiss()

<StartAnalysisPopup>
    size_hint: .3, .3
    auto_dismiss: False
    title: 'Do you want to analyze ' + root.len_files + ' gzips?'
#    text_size: self.size
    BoxLayout:
        orientation: 'horizontal'

        Button:
            text: 'Back'
            on_release: root.dismiss()
        Button:
            text: 'Run'
            on_release: app.root.current = 'analysis'; root.dismiss()

<NoGzipsFoundPopup>
    size_hint: 0.5, 0.3
    auto_dismiss: False
    title: 'There are no gzips in the path you selected.'
    BoxLayout:
        Button:
            text: 'Back'
            on_release: root.dismiss()

<NoWavsFoundPopup>
    size_hint: 0.3, 0.3
    auto_dismiss: False
    title: 'There are no WAV files in the path you selected.'
    BoxLayout:
        Button:
            text: 'Back'
            on_release: root.dismiss()

<LandingPage>:
    radio_chipper: chipper.active
    radio_note: determine_note_thresh.active
    radio_syllsim: determine_syllsim_thresh.active
    radio_analyze: analyze.active
    find_gzips: find_prev_gzips.active
    user_signal_thresh: signal_threshold_input.text
    user_min_silence: min_silence_input.text
    user_min_syllable: min_syllable_input.text
    user_note_thresh: note_thresh_input.text
    user_syll_sim_thresh: syll_sim_input.text
    BoxLayout:
        orientation: 'horizontal'
        padding: 10
        spacing: 10

        StackLayout:
            size_hint_x: 0.6

            Image:
                source:'ChipperIcon.png'
                size_hint_y: 0.3

            BoxLayout:
                size_hint_y: 0.3

            Label:
                id: version_label
                markup: True
                text: '[b]Version:[/b] alpha'
                size_hint_y: 0.1

            GridLayout:
                rows: 9
                cols: 1
                size_hint_y: 0.3

                Label:
                    id: general_info
                    markup: True
                    text: '[b]General Information:[/b]'
                Label:
                    id: created_by
                    markup: True
                    text: 'Created by Abigail Searfoss'
                Label:
                    id: created_by
                    markup: True
                    text: 'From Creanza Laboratory'
                Label:
                    id: publication
                    markup: True
                    text: 'Publication in Press'
                Label:
                    id: blank
                    markup: True
                    text: '\n'


                Label:
                    id: links_header
                    markup: True
                    text: '[b]Useful Links:[/b]'
                Label:
                    id: hyperlink1
                    markup: True
                    text: '[ref=https://github.com/asearfos/chipper][color=044900][u][b]Chipper GitHub[/u][/b][/color][/ref]'
                    on_ref_press: webbrowser.open('https://github.com/asearfos/chipper')
                Label:
                    id: hyperlink2
                    markup: True
                    text: '[ref=https://docs.google.com/document/d/1UmqRCkZb6sFSoRxWMaCfUfqSTlaHpNIxzqUjcGagYeA/edit?usp=sharing][color=044900][u][b]Chipper Instructions[/u][/b][/color][/ref]'
                    on_ref_press: webbrowser.open('https://docs.google.com/document/d/1UmqRCkZb6sFSoRxWMaCfUfqSTlaHpNIxzqUjcGagYeA/edit?usp=sharing')
                Label:
                    id: analysis_outputs
                    markup: True
                    text: '[color=044900][u][b]Analysis Outputs Defined[/u][/b][/color]'

        Widget:
            id: separator
            size_hint_x: None
            width: 3
            canvas:
                Color:
                    rgb: .345, .345, .345
                Rectangle:
                    pos: separator.center_x, 0
                    size: separator.width, root.height

        BoxLayout:
            size_hint_x: 0.03

        GridLayout:
            rows: 5
            cols: 1

            Label:
                size_hint_y: 0.25
                text_size: self.size
                text: 'Welcome to Chipper. To begin, choose whether you would like to segment syllables, analyze previously segmented syllables or perform both. Adjust settings if desired.'
                valign: 'center'

            StackLayout:
                size_hint_y: 0.25
                CheckBox:
                    id: chipper
                    group: 'chipper_analyze'
                    size_hint_x: 0.1
                    size_hint_y: 0.3
                    active: True
                RadioLabel:
                    id: chipper_label
                    text: 'Syllable Segmentation'
                    halign: 'left'
                    valign: 'center'
                    text_size: chipper_label.width, None
                    size_hint_x: 0.9
                    size_hint_y: 0.3
                    on_press: chipper._do_press()

                CheckBox:
                    id: determine_note_thresh
                    group: 'chipper_analyze'
                    size_hint_x: 0.1
                    size_hint_y: 0.3
                RadioLabel:
                    id: determine_note_thresh_label
                    text: 'Determine Note Size Threshold (pixels)'
                    halign: 'left'
                    valign: 'center'
                    text_size: determine_note_thresh_label.width, None
                    size_hint_x: 0.9
                    size_hint_y: 0.3
                    on_press: determine_note_thresh._do_press()

                CheckBox:
                    id: determine_syllsim_thresh
                    group: 'chipper_analyze'
                    size_hint_x: 0.1
                    size_hint_y: 0.3
                RadioLabel:
                    id: determine_syllsim_thresh_label
                    text: 'Determine Syllable Similarity Threshold (%)'
                    halign: 'left'
                    valign: 'center'
                    text_size: determine_syllsim_thresh_label.width, None
                    size_hint_x: 0.9
                    size_hint_y: 0.3
                    on_press: determine_syllsim_thresh._do_press()

                CheckBox:
                    id: analyze
                    group: 'chipper_analyze'
                    size_hint_x: 0.1
                    size_hint_y: 0.3
                RadioLabel:
                    id: analyze_label
                    text: 'Song Analysis'
                    halign: 'left'
                    valign: 'center'
                    text_size: analyze_label.width, None
                    size_hint_x: 0.9
                    size_hint_y: 0.3
                    on_press: analyze._do_press()

            BoxLayout:
                size_hint_y: 0.05

            GridLayout:
                rows: 1
                cols: 2
                size_hint_x: 0.3

                BoxLayout:
                    size_hint_x: 0.1
                    size_hint_y: 1

                StackLayout: # <--- to show/hide this menu see comments
                    id: chipper_menu
#                    width: 120 if chipper_and_analyze.active else 0
#                    height: 120
#                    size_hint: (1, 1) if chipper_and_analyze.active else (0, 0)
#                    opacity: 1 if chipper_and_analyze.active else 0
                    padding: 10
                    spacing: 8

                    CheckBox:
                        id: find_prev_gzips
                        size_hint: 0.15, 0.1
                        disabled: False if chipper.active else True
                    RadioLabel:
                        text: 'Search for previously used parameters\n(note: slower loading time, will override defaults)'
                        halign: 'left'
                        valign: 'center'
                        text_size: self.size
                        size_hint: 0.85, 0.14
                        disabled: False if chipper.active else True
                        on_press: find_prev_gzips._do_press()

                    NumericInput:
                        id: signal_threshold_input
                        input_filter: 'float'
                        min_value: 0.1
                        max_value: 6
                        text: '3'
                        padding: [6, ( self.height - self.line_height )/2]
                        size_hint: 0.15, 0.1
                        disabled: False if chipper.active else True
                    Label:
                        text: 'Top Percent of Signal Kept (.1-6%)'
                        halign: 'left'
                        valign: 'center'
                        text_size: self.size
                        size_hint: 0.85, 0.1
                        disabled: False if chipper.active else True

                    NumericInput:
                        id: min_silence_input
                        input_filter: 'float'
                        min_value: 0
                        max_value: 50
                        text: '10'
                        padding: [6, ( self.height - self.line_height )/2]
                        size_hint: 0.15, 0.1
                        disabled: False if chipper.active else True
                    Label:
                        text: 'Minimum Silence Duration (0-50ms)'
                        halign: 'left'
                        valign: 'center'
                        text_size: self.size
                        size_hint: 0.85, 0.1
                        disabled: False if chipper.active else True

                    NumericInput:
                        id: min_syllable_input
                        input_filter: 'float'
                        min_value: 0
                        max_value: 350
                        text: '20'
                        padding: [6, ( self.height - self.line_height )/2]
                        size_hint: 0.15, 0.1
                        disabled: False if chipper.active else True
                    Label:
                        text: 'Minimum Syllable Duration (0-350 ms)'
                        halign: 'left'
                        valign: 'center'
                        text_size: self.size
                        size_hint: 0.85, 0.1
                        disabled: False if chipper.active else True

                    TextInput:
                        id: note_thresh_input
                        input_filter: 'int'
                        text: '120'
                        padding: [6, ( self.height - self.line_height )/2]
                        size_hint: 0.15, 0.1
                        disabled: False if analyze.active else True
                    Label:
                        text: 'Note Size Threshold (pixels)'
                        halign: 'left'
                        valign: 'center'
                        text_size: self.size
                        size_hint: 0.85, 0.1
                        disabled: False if analyze.active else True

                    NumericInput:
                        id: syll_sim_input
                        input_filter: 'float'
                        min_value: 0
                        max_value: 100
                        text: '40'
                        padding: [6, ( self.height - self.line_height )/2]
                        size_hint: 0.15, 0.1
                        disabled: False if analyze.active else True
                    Label:
                        text: '% Syllable Similarity (> are same syllable)'
                        halign: 'left'
                        valign: 'center'
                        text_size: self.size
                        size_hint: 0.85, 0.1
                        disabled: False if analyze.active else True

            GridLayout:
                size_hint_y: 0.2
                rows: 1
                cols: 3
                padding: 10

                BoxLayout:

                Button:
                    id: start_chipper
                    text: 'START'
                    on_release: app.root.current = 'choose_file'

                BoxLayout:

<FileExplorer>:
    id: browse
    name: 'choose_file'
    FileBrowser:
        id: file_browser
        dirselect: True
        on_success: browse._fbrowser_success(file_browser); #app.root.current = 'control_panel'
        on_canceled: app.root.current = 'landing_page' # browse._fbrowser_canceled(file_browser)

<ImageSonogram>:

#<ImageBinary>:

<ControlPanel>:
    id: controls
#    name: 'control_panel'
    find_gzips: False
    user_signal_thresh: '3'
    user_min_silence: '10'
    user_min_syllable: '20'
    user_note_thresh: '120'
    user_syll_sim_thresh: '40'
    on_pre_enter: controls.setup()
    top_image: graph_sonogram
#    bottom_image: graph_binary

    BoxLayout:
        orientation: 'horizontal'
        padding: 10
        spacing: 0

        BoxLayout:
            orientation: 'vertical'
            spacing: 10
            size_hint_x: .05

            MyRangeSlider:
                id: slider_frequency_filter
                orientation: 'vertical'
                padding: 0
#                value_track: True
#                value_track_color: [.2, .7, 0.9, 1]
                step: 1
                on_release: controls.update(slider_frequency_filter.value, range_slider_crop.value, round(slider_threshold.value,1), slider_min_silence.value, slider_min_syllable.value)

            GridLayout:

            GridLayout:
                size_hint: 1, 0.05

        BoxLayout:
            id: graphs
            orientation: 'vertical'
            spacing: 10

            ImageSonogram:
                id: graph_sonogram
                rows: 1
                cols: 1
                size_hint_x: 1

            GridLayout:
                id: graph_binary
                rows: 1
                cols: 1
                size_hint_x: 1

#            ImageBinary:
#                id: graph_binary
#                rows: 1
#                cols: 1
#                size_hint_x: 1

            MyRangeSlider:
                id: range_slider_crop
                size_hint: 1, 0.05
                padding: 0
                step: 1
                on_release: controls.update(slider_frequency_filter.value, range_slider_crop.value, round(slider_threshold.value,1), slider_min_silence.value, slider_min_syllable.value)

        GridLayout:
            rows: 7
            cols: 1
            spacing: 20
            padding: 10
            size_hint_x: .375

            GridLayout:
                rows: 3
                cols: 1
                spacing: 10
                padding: 10

                CustomLabel:
                    text: 'Threshold: Top Percent of Signal'
                MySlider:
                    id: slider_threshold
                    min: 0.1
                    max: 6
                    value: float(root.user_signal_thresh)
                    step: 0.1
                    on_release: controls.update(slider_frequency_filter.value, range_slider_crop.value, round(slider_threshold.value,1), slider_min_silence.value, slider_min_syllable.value)
                CustomLabel:
                    id: slider_threshold_label

            GridLayout:
                rows: 3
                cols: 1
                spacing: 10
                padding: 10

                CustomLabel:
                    text: 'Minimum Silence Duration'
                MySlider:
                    id: slider_min_silence
                    min: 1
                    value: root.user_min_silence
                    step: 1
                    on_release: controls.update(slider_frequency_filter.value, range_slider_crop.value, round(slider_threshold.value,1), slider_min_silence.value, slider_min_syllable.value)
                CustomLabel:
                    id: slider_min_silence_label

            GridLayout:
                rows: 3
                cols: 1
                spacing: 10
                padding: 10

                CustomLabel:
                    text: 'Minimum Syllable Duration'
                MySlider:
                    id: slider_min_syllable
                    min: 1
                    value: root.user_min_syllable
                    step: 1
                    on_release: controls.update(slider_frequency_filter.value, range_slider_crop.value, round(slider_threshold.value,1), slider_min_silence.value, slider_min_syllable.value)
                CustomLabel:
                    id: slider_min_syllable_label

            GridLayout:
                rows: 1
                cols: 1
                spacing: 10
                padding: 10
                size_hint_y: 0.5

                Button:
                    text: 'Reset Parameters'
                    halign: 'center'
                    on_release: controls.reset_parameters()

            GridLayout:
                rows: 1
                cols: 2
                spacing: 10
                padding: 10

                GridLayout:
                    rows: 2
                    cols: 1

                    ToggleButton:
                        id: syllable_beginning
                        group: 'syllable_marks'
                        text: 'Syllable\nBeginning'
                        halign: 'center'
                        on_press: syllable_beginning.state = 'down'

                    ToggleButton:
                        id: syllable_ending
                        group: 'syllable_marks'
                        text: 'Syllable\nEnding'
                        halign: 'center'
                        on_press: syllable_ending.state = 'down'

                GridLayout:
                    rows: 2
                    cols: 1

                    ToggleButton:
                        id: add
                        group: 'user_defined_syllables'
                        text: 'Add'
#                        on_touch_down: graph_binary.collide_point(*args[1].pos) and self.state == 'down' and controls.zoom(*args[1].pos)
                        on_touch_down: graph_binary.collide_point(*args[1].pos) and self.state == 'down' and controls.add_mark(*args[1].pos)

                    ToggleButton:
                        id: delete
                        group: 'user_defined_syllables'
                        text: 'Delete'
                        on_touch_down: graph_binary.collide_point(*args[1].pos) and self.state == 'down' and controls.delete_mark(*args[1].pos)

            GridLayout:
                rows: 2
                cols: 1
                spacing: 10
                padding: 10

                Button:
                    id: button_submit
                    text: 'SUBMIT'
                    on_release: controls.save()

                Button:
                    id: button_toss
                    text: 'TOSS'
                    on_release: controls.toss()

            GridLayout:
                rows: 2
                cols: 1
                spacing: 10
                padding: 10

                Label:
                    id: current_file
                    halign: 'center'

                Button:
                    text: 'Back'
                    on_release: controls.back()

<Analysis>:
    id: processing
    on_enter: processing.thread_process()

    GridLayout:
        rows: 5
        cols: 1

        CustomLabel:
            text: 'Your files are being processed:'
            font_size: '18sp'
        CustomLabel:
            id: processing_count
            text: ''
            font_size: '16sp'

        BoxLayout:
            size_hint_y: 0.75

        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: 0.5

            BoxLayout:
                size_hint_x: 0.25

            Button:
                text: 'Close without finishing.'
                on_release: quit() # needs to be fixed, does not stop processing

            BoxLayout:
                size_hint_x: 0.25

            Button:
                id: analysis_done
                text: 'Return to Home'
                disabled: True
                on_release: app.root.current = 'landing_page'

            BoxLayout:
                size_hint_x: 0.25

        BoxLayout:
            size_hint_y: 0.25


