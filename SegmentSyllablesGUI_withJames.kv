#:import MeshLinePlot kivy.garden.graph.MeshLinePlot
#:import np numpy
#:import FileBrowser kivy.garden.filebrowser

<Manager>:
    ScreenOne:
    ControlPanel:

<CustomLabel@Label>
    color: 1, 1, 1, 1

<DonePopup>:
    size_hint: .5, .5
    auto_dismiss: False
    title: 'You have completed the files in this directory.\nAll parameters, onsets, and offsets have been saved.'
    Button:
        text: 'Close'
        on_release: app.root.quit()

<ScreenOne>:
    id: browse
    name: 'choose_file'
    FileBrowser:
        id: file_browser
        dirselect: True
        on_success: browse._fbrowser_success(file_browser); app.root.current = 'control_panel'
        on_canceled: browse._fbrowser_canceled(file_browser)

<ControlPanel>:
    id: controls
    name: 'control_panel'
    on_pre_enter: controls.setup()
    BoxLayout:
        orientation: "horizontal"
        spacing: 10
        padding: 10

        GridLayout:
            rows: 2
            cols: 1
            spacing: 20
            padding: 5
            size_hint_x: .1

            MySlider:
                id: slider_high_pass_filter
                orientation: 'vertical'
                min: 0
                max: 513
                value: 0
                step: 1
                on_release: controls.update(controls.sonogram, 513-int(slider_high_pass_filter.value), round(slider_threshold.value,1), slider_min_silence.value, slider_min_syllable.value)

            GridLayout:
                rows: 2
                cols: 1

        GridLayout:
            id: graphs
            rows: 2
            cols: 1
            spacing: 20
            padding: 10

            GridLayout:
                id: graph_sonogram
                rows: 1
                cols: 1
            GridLayout:
                id: graph_binary
                rows: 1
                cols: 1

        GridLayout:
            rows: 6
            cols: 1
            spacing: 20
            padding: 20
            size_hint_x: .5

            GridLayout:
                rows: 3
                cols: 1
                spacing: 10
                padding: 10

                CustomLabel:
                    text: 'Threshold: Top Percent of Signal'
                MySlider:
                    id: slider_threshold
                    min: 0
                    max: 3
                    value: 2
                    step: 0.10
                    on_release: controls.update(controls.sonogram, 513-int(slider_high_pass_filter.value), round(slider_threshold.value,1), slider_min_silence.value, slider_min_syllable.value)
                CustomLabel:
                    text: str(round(slider_threshold.value,1))

            GridLayout:
                rows: 3
                cols: 1
                spacing: 10
                padding: 10

                CustomLabel:
                    text: 'Minimum Silence Duration'
                MySlider:
                    id: slider_min_silence
                    min: 1
                    max: 50
                    value: 10
                    step: 1
                    on_release: controls.update(controls.sonogram, 513-int(slider_high_pass_filter.value), round(slider_threshold.value,1), slider_min_silence.value, slider_min_syllable.value)
                CustomLabel:
                    text: str(slider_min_silence.value)

            GridLayout:
                rows: 3
                cols: 1
                spacing: 10
                padding: 10

                CustomLabel:
                    text: 'Minimum Syllable Duration'
                MySlider:
                    id: slider_min_syllable
                    min: 1
                    max: 100
                    value: 20
                    step: 1
                    on_release: controls.update(controls.sonogram, 513-int(slider_high_pass_filter.value), round(slider_threshold.value,1), slider_min_silence.value, slider_min_syllable.value)
                CustomLabel:
                    text: str(slider_min_syllable.value)

            GridLayout:
                rows:1
                cols:2
                spacing: 10
                padding: 10

                ToggleButton:
                    id: set_beginning
                    text: 'Set Bout Beginning:\nSelect Now' if set_beginning.state == 'down' else 'Set Bout Beginning'
                    group: 'Crop'

                ToggleButton:
                    id: set_ending
                    text: 'Set Bout Ending:\nSelect Now' if set_ending.state == 'down' else 'Set Bout Ending'
                    group: 'Crop'

            GridLayout:
                rows: 1
                cols: 2
                spacing: 10
                padding: 10

                GridLayout:
                    rows: 1
                    cols: 1

                    ToggleButton:
                        id: syllable_toggle
                        text: 'Syllable Beginning'
                        on_press: syllable_toggle.text = 'Syllable Ending'


                GridLayout:
                    rows: 2
                    cols: 1

                    Button:
                        id: add
                        text: 'Add'

                    Button:
                        id: del
                        text: 'Delete'

            GridLayout:
                rows: 2
                cols: 1
                spacing: 10
                padding: 10

                Button:
                    id: button_submit
                    text: 'SUBMIT'
                    on_press: controls.save()

                Button:
                    id: button_toss
                    text: 'TOSS'
                    on_press: controls.toss()


